definitions:
  entity.AuthResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  entity.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  entity.User:
    properties:
      email:
        example: user_1234@gmail.com
        type: string
      id:
        example: "1234"
        type: string
      password:
        example: pass_1234
        type: string
      phone:
        example: "89178298123"
        type: string
      username:
        example: user_1234
        type: string
    type: object
info:
  contact: {}
  description: This is the auth services of course project
  title: Auth Service
paths:
  /login:
    post:
      consumes:
      - application/json
      description: login user by credentials
      parameters:
      - description: user to login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      description: logout user with token's validation
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token is valid
          schema:
            type: nil
        "401":
          description: User is unauthorized
          schema:
            type: nil
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - auth
  /registration:
    post:
      consumes:
      - application/json
      description: register user by credentials
      parameters:
      - description: user to register
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      summary: Register user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
